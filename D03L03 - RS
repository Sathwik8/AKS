# Replicaset lab
# ----------------------------------------------------------

# delete all the pod
$ kubectl delete pod --all

# Create the Replicaset
cat > vote-rs.yaml
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: vote
spec:
  replicas: 4
  minReadySeconds: 20
  selector:
    matchLabels:
      role: vote
    matchExpressions:
      - {key: version, operator: In, values: [v1, v2, v3]}
  template:
    metadata:
      name: vote
      labels:
        app: python
        role: vote
        version: v2
    spec:
      containers:
        - name: app
          image: schoolofdevops/vote:v2
          ports:
            - containerPort: 80
              protocol: TCP
ctrl+d to save

# create the repicaset
$ kubectl apply -f vote-rs.yaml

# To list the replicaset
$ kubectl get rs

# to list the pods
$ kubectl get pod

#to display detailed information about pod
$ kubectl describe rs vote

# ----------------------------------------------------------
# Test the pod HA by deleting one pod

$ kubectl get pod

# copy one of the pod name
$ kubectl delete pod podname
#eg
$ kubectl delete pod vote-5shbs
# you will see a new pod immidiately created

# Creare the normal pod using the folliwng yaml file
cat > newpod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: vote
  labels:
    app: python
    role: vote
    version: v1
spec:
  containers:
    - name: app
      image: schoolofdevops/vote:v2
      ports:
        - containerPort: 80
          protocol: TCP
ctrl+d

$ kubectl apply -f newpod.yaml

$ kubectl get pod

# you will see the new pod is terminating . the reason of terminating of the new pod that the new pod is having the same label what is there in the selector of the rs

# Changed the desired state of replicaset by editing the file vote-rs.yaml and modify the replicas from 5 to 8 and then
$ vi vote-rs.yaml
#change replca count to 8

$ kubectl apply -f vote-rs.yaml

# Modify the replica count using command
$ kubectl scale rs vote --replicas=4

# Check the pod replicas suing
$kubectl get pod 

# update the replica count to 4 in the yaml file
Updating the application image in Replicaset

# modify the vote-rs.yaml file and update the pod label to v3 and the image version to v3 and replicas to 4
vi vote-rs.yaml  

# the file content should be like this 
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: vote
spec:
  replicas: 4
  minReadySeconds: 20
  selector:
    matchLabels:
      role: vote
    matchExpressions:
      - {key: version, operator: In, values: [v1, v2, v3]}
  template:
    metadata:
      name: vote
      labels:
        app: python
        role: vote
        version: v3
    spec:
      containers:
        - name: app
          image: schoolofdevops/vote:v3
          ports:
            - containerPort: 80
              protocol: TCP

$ kubectl apply -f vote-rs.yaml

# To verify the change 
$ kubectl describe rs vote 

# you will see the label and umage get updated and now lets verify the pod
$ kubectl get pod

# copy any one of the pod name and execute
$ kubectl describe pod pod_name

# you will find the pod desription container the old label and old image. 
# Delete the pod and check the newly crated pod

$ kubectl describe pod vote-f9smd 
# you will see the new pod is updated with the new label and docker image.
# Delete the rest of the pod and verify all the pod using th above command.
# ------
# Replicaset do not have the functionality of performing auto upgrade of the application. After modifying the image user need to manually delete the pod and then new pod created with the new version
# ----------------------------------------------------------
